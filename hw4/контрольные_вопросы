* Сколько аргументов передается из командной строки при выполнении кода: python3 1.py "arg" 7 --value 18 -a? Перечислите эти параметры. 
4 - arg, 7, 18. a
* Каким образом мы можем получить имя исполняемого скрипта внутри программы?
print(sys.argv[0])
* Каким образом можно обратиться к значениям параметров при использовании библиотеки argparse? Какие особенности будут, если эти параметры передавались через дефис, два дефиса или через оба?
1. Создаем экземпляр класса ArgumentParser.
2. Добавляем в него информацию об ожидаемых параметрах с помощью метода add_argument (по одному вызову на каждый параметр).
3. Разбираем командную строку помощью метода parse_args, передавая ему полученные параметры командной строки (кроме нулевого элемента списка sys.argv).
Обычно аргументы с одним дефисом состоят только из одной буквы/символа, т.е -abc = -a -b -c . С двойным дефисом вводятся длинные параметры, состоящие из нескольких символов
* В каком случае сработает присвоение параметру значения default? В каком const? Как это связано с nargs?
const - для хранения постоянных значений, которые не считываются из командной строки, требуемое некоторыми action и nargs (по умолчанию имеет значение None)
default - значение (необязательные параметры и некоторые позиционные параметры), полученное, если опция отсутствует в командной строке (значение по умолчанию равно None)
Для позиционных параметров с установленным аргументом nargs равным '?' или '*', значение по умолчанию default используется при отсутствии параметра в командной строке
* Что такое декораторы и для чего они применяются?
Декораторы дают менять поведение функции/расширить ее функционал, при этом не изменяя сам код функции
* Как использование декоратора влияет на время работы функции?
Замедляют работу функции
